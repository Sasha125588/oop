#include "Zoo.hpp"
#include <iostream>

using namespace std;

void printMainMenu();
void clearScreen();

int main() {
    cout << "\nüéâ –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —Å–∏—Å—Ç–µ–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ó–æ–æ–ø–∞—Ä–∫–æ–º! üéâ\n" << endl;

    vector<Animal*> testAnimals = {
        new Cat("–ú—É—Ä—á–∏–∫", 3, "–ë—Ä–∏—Ç–∞–Ω—Å—å–∫–∞", "–°—ñ—Ä–∏–π"),
        new Dog("–†–µ–∫—Å", 5, "–ù—ñ–º–µ—Ü—å–∫–∞ –≤—ñ–≤—á–∞—Ä–∫–∞", "–ö–æ—Ä–∏—á–Ω–µ–≤–∏–π"),
        new Parrot("–ö–µ—à–∞", 7, "–ó–µ–ª–µ–Ω–∏–π", true),
        new Hamster("–ü—É—Ö–Ω–∞—Å—Ç–∏–∫", 1, "–ó–æ–ª–æ—Ç–∏—Å—Ç–∏–π", "Long"),
        new Cat("–ú—É—Ä–∫–∞", 2, "–ü–µ—Ä—Å—å–∫–∞", "–ë—ñ–ª–∞"),
        new Dog("–ë–∞–¥–¥—ñ", 4, "–õ–∞–±—Ä–∞–¥–æ—Ä", "–ó–æ–ª–æ—Ç–∏—Å—Ç–∏–π"),
        new Parrot("–†—ñ–æ", 3, "–°–∏–Ω—ñ–π", false),
        new Hamster("–ú–∞–ª—é–∫", 1, "–ë—ñ–ª–∏–π", "Short"),
        new Cat("–°–Ω—ñ–∂–æ–∫", 1, "–°—Ñ—ñ–Ω–∫—Å", "–†–æ–∂–µ–≤–∏–π"),
        new Dog("–®–∞—Ä–∏–∫", 6, "–•–∞—Å–∫—ñ", "–ß–æ—Ä–Ω–æ-–±—ñ–ª–∏–π")
    };

    Zoo zoo(testAnimals);
    
    int choice;
    bool running = true;

    while (running) {
        printMainMenu();
        cout << "–í–∞—à –≤–∏–±—ñ—Ä: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                cout << "\n--- –î–û–î–ê–í–ê–ù–ù–Ø –ù–û–í–û–á –¢–í–ê–†–ò–ù–ö–ò ---" << endl;
                zoo.addAnimal();
                break;
            }
            case 2: {
                zoo.showAllAnimals();
                break;
            }
            case 3: {
                if (zoo.getAnimalsCount() > 0) {
                    zoo.showAllAnimals();
                    int index;
                    cout << "\n–í–≤–µ–¥—ñ—Ç—å —ñ–Ω–¥–µ–∫—Å —Ç–≤–∞—Ä–∏–Ω–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É (0-" 
                         << (zoo.getAnimalsCount() - 1) << "): ";
                    cin >> index;
                    zoo.removeAnimalByIndex(index);
                } else {
                    cout << "\nüì≠ –ó–æ–æ–ø–∞—Ä–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!" << endl;
                }
                break;
            }
            case 4: {
                if (zoo.getAnimalsCount() > 0) {
                    string name;
                    cout << "\n–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç–≤–∞—Ä–∏–Ω–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∂—É: ";
                    cin.ignore();
                    getline(cin, name);
                    zoo.removeAnimalByName(name);
                } else {
                    cout << "\nüì≠ –ó–æ–æ–ø–∞—Ä–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!" << endl;
                }
                break;
            }
            case 5: {
                char confirm;
                cout << "\n‚ö†Ô∏è  –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç–∏ –í–°–Ü —Ç–≤–∞—Ä–∏–Ω–∫–∏? (y/n): ";
                cin >> confirm;
                if (confirm == 'y' || confirm == 'Y') {
                    zoo.removeAllAnimals();
                } else {
                    cout << "‚ùå –û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ." << endl;
                }
                break;
            }
            case 6: {
                cout << "\nüëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è! –î—è–∫—É—î–º–æ –∑–∞ —Ä–æ–±–æ—Ç—É –∑ –ó–æ–æ–ø–∞—Ä–∫–æ–º!" << endl;
                cout << "üìä –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–≤–∞—Ä–∏–Ω–æ–∫ —É –∑–æ–æ–ø–∞—Ä–∫—É: " 
                     << zoo.getAnimalsCount() << endl;
                running = false;
                break;
            }
            default: {
                cout << "\n‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." << endl;
                break;
            }
        }

        if (running) {
            cout << "\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è...";
            cin.ignore();
            cin.get();
        }
    }

    return 0;
}

void printMainMenu() {
    cout << "\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" << endl;
    cout << "‚ïë            ü¶Å –ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ –ó–û–û–ü–ê–†–ö–£ ü¶Å               ‚ïë" << endl;
    cout << "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£" << endl;
    cout << "‚ïë  1. üêæ –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Ç–≤–∞—Ä–∏–Ω–∫—É                          ‚ïë" << endl;
    cout << "‚ïë  2. üëÄ –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö —Ç–≤–∞—Ä–∏–Ω–æ–∫                        ‚ïë" << endl;
    cout << "‚ïë  3. üí∞ –ü—Ä–æ–¥–∞—Ç–∏ —Ç–≤–∞—Ä–∏–Ω–∫—É –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º                  ‚ïë" << endl;
    cout << "‚ïë  4. üí∏ –ü—Ä–æ–¥–∞—Ç–∏ —Ç–≤–∞—Ä–∏–Ω–∫—É –∑–∞ —ñ–º'—è–º                     ‚ïë" << endl;
    cout << "‚ïë  5. üí∞üí∞ –ü—Ä–æ–¥–∞—Ç–∏ –í–°–Ü —Ç–≤–∞—Ä–∏–Ω–∫–∏                        ‚ïë" << endl;
    cout << "‚ïë  6. üö™ –í–∏–π—Ç–∏                                         ‚ïë" << endl;
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" << endl;
}
